//This file is meant to explain how to picture.
/*
1.如何画图：
  首先，在频率或者说刷新率一定的情况下，一条脑电波就是一个时间点数的数组。
多条并行的脑电波则是通过多个电机采集到的数据在不同输出端画出来的。（个人理解）
网上有很多实现的例子，实现方式多种多样：Python，MATLAB，matplotlib等等。
但是基本思路都应该是一致的，也就是：一条脑电波==一个时间点数的数组。
当然也有其他的绘制方法，比如类似于地理中的等高线图或者3D的电势图。但是在我搜到的这些例子中也比较少，叫脑地形图。
大部分还是像医院机器上的心电图，脑电图，是一条折线。
2.那么，如何实现用代码画脑电图呢：
  （虽说语言任意，不过网络上大部分都是使用的Python和Matplotlib库。）
  ①首先我们考虑，采集的数据如何存储，比如用一个200元素大小的数组记录1s内的电信号活动，把若干个这样的数组放进另一个数组中，
也就是二维数组，这样就实现了多通道数据的存储。
  （在自己实现的时候可以采用“周期正弦+随机扰动”来模拟电信号和噪音）
  ②接下来我们考虑，存储已经完成了，我们该如何将它显示在屏幕上呢。
在接触到的网站（CSDN，KIMI等）中，可以总结出一个相似的基本思路：
从文件中读取数据->去除噪音->直接选择画图使用的库->对显示的脑电图增加一些细节（坐标轴，标题等等）
关于画图使用的库，我所看到的有Python中的Matplotlib、Plotly，以及JavaScript中的D3.js。
3.如何实现动态更新：
  在上述过程中，我们得到了一条/若干条静态的脑电图，也就是说，它在显示屏上是静态的线。
这显然不是我们需要的，我们要的肯定是能实时显示的，想暂停看看或持续观察都可以才行。（就像是学校实验室的示波器）
如何实现动态更新，在许多网站上是使用Python中的matplotlib.animation模块或者PyQtGraph、Plotly等库来实现的。
因为老师说是最难的部分，所以我去查了一下matplotlib.animation模块的背后逻辑，大致是这样的：
  ①初始化界面：无数据读入，此时显示屏上只有坐标轴，标题等等。
  ②定义更新函数：作用是周期性更新显示屏上的数据，根据我们之前的“二维数组”思路，就是更改节点处的值。
  （根据③，对于一个通道，每调用一次，该函数应该是更改一个节点值）
  ③FuncAnimation：这是该模块的主要功能，其背后逻辑是这样的：
    初始化参数：包括坐标轴，帧率等等。
    确定帧率：这是必须确定的参数，因为会影响下面的步骤。
    调用②中定义的更新函数：这里的调用是每一帧调用一次。所以调用次数很多，调用速度也必须要快。
    其他必要功能：比如暂停、继续动画等等，因为和本问题关系不算很大所以略过。
以上就是简单的代码实现脑电图实时更新的大致思路。
简写一下：  持续读入采集到的数据->读入备份文件储存->按下“显示”按钮后->读取文件并显示->每帧更新->关机->停止读取文件，不再存储或显示
*/
